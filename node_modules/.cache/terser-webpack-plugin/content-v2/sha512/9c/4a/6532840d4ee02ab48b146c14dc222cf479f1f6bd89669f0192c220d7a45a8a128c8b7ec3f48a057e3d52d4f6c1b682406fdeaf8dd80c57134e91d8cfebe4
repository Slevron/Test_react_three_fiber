{"code":"webpackHotUpdate(\"main\",{\"./src/components/elements/Stick.tsx\":\n/*!*******************************************!*\\\n  !*** ./src/components/elements/Stick.tsx ***!\n  \\*******************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){\"use strict\";eval('\\r\\nvar __importDefault = (this && this.__importDefault) || function (mod) {\\r\\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\\r\\n};\\r\\nObject.defineProperty(exports, \"__esModule\", { value: true });\\r\\nexports.Stick = void 0;\\r\\nconst react_1 = __importDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\\r\\nconst three_1 = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\\r\\nconst Cube_1 = __webpack_require__(/*! ../shared/Cube */ \"./src/components/shared/Cube.tsx\");\\r\\nconst MeshHelpers_1 = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\'utils/MeshHelpers\\'\"); e.code = \\'MODULE_NOT_FOUND\\'; throw e; }()));\\r\\nvar EnumStick;\\r\\n(function (EnumStick) {\\r\\n    EnumStick[EnumStick[\"scaleMax\"] = 1.4] = \"scaleMax\";\\r\\n    EnumStick[EnumStick[\"scaleSpeed\"] = 0.1] = \"scaleSpeed\";\\r\\n})(EnumStick || (EnumStick = {}));\\r\\nexports.Stick = () => {\\r\\n    const params = {\\r\\n        position: new three_1.Vector3(0.8, 0, 0),\\r\\n        scale: new three_1.Vector3(0, 0.1, 0.1),\\r\\n        animationFct: (mesh) => {\\r\\n            if (mesh.current.scale.x <= EnumStick.scaleMax) {\\r\\n                mesh.current.scale.x += EnumStick.scaleSpeed;\\r\\n                MeshHelpers_1.MeshHelpers.updateMatrix(mesh);\\r\\n                mesh.pivot;\\r\\n                new three_1.Vector3(0, 0, 0);\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    return (react_1.default.createElement(Cube_1.Cube, Object.assign({}, params)));\\r\\n};\\r\\n\\n\\n//# sourceURL=webpack:///./src/components/elements/Stick.tsx?')}});","extractedComments":[]}